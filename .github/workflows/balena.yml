name: balena

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

env:
  BALENARC_BALENA_URL: balena-cloud.com
  BALENARC_PROXY_URL: balena-devices.com
  BALENA_CLI_VERSION: 12.48.11

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12

      - id: npm_install
        run: npm install balena-cli@${{ env.BALENA_CLI_VERSION }} --production --global

      - id: balena_login
        run: balena login --token "${{ secrets.BALENA_API_KEY }}"

      - id: is_pr
        if: github.event_name == 'pull_request'
        run: echo "::set-output name=draft::--draft"

      - id: balena_push
        shell: bash
        run: |
          balena push ${{ secrets.BALENA_FLEET_SLUG }} \
            --release-tag GITHUB_WORKFLOW "${GITHUB_WORKFLOW}" \
            --release-tag GITHUB_RUN_ID "${GITHUB_RUN_ID}" \
            --release-tag GITHUB_RUN_NUMBER "${GITHUB_RUN_NUMBER}" \
            --release-tag GITHUB_ACTOR "${GITHUB_ACTOR}" \
            --release-tag GITHUB_SHA "${GITHUB_SHA}" \
            --release-tag GITHUB_REF "${GITHUB_REF}" \
            ${{ steps.is_pr.outputs.draft }} | tee build.log
          sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" -i build.log
          grep -q 'Release successfully created!' build.log
          echo "::set-output name=release_id::$(sed -rn 's/.*Release: ([[:alnum:]]+) \(id: ([0-9]+)\)/\2/p' build.log)"

      - id: release_api
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          echo "::set-output name=release_version::$(curl -fsSL -X GET \
            "https://api.${{ env.BALENARC_BALENA_URL }}/v6/release(${{ steps.balena_push.outputs.release_id }})?\$select=version" \
            -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.BALENA_API_KEY }}" | jq -r '.d[].version.raw')"

      # requires with 'repo' access.
      # using GITHUB_TOKEN will NOT trigger other workflows
      - uses: tvdias/github-tagger@v0.0.2
        if: github.event_name == 'pull_request'
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "v${{ steps.release_api.outputs.release_version }}"
